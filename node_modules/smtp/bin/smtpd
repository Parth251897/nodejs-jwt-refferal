#!/usr/bin/env node

var smtp = require('smtp')
var fs = require('fs')
var sys = require('sys')
try {
	var mailbox = require('mailbox')
} catch(e) {
	console.log(e.message)
	console.log("install mailbox with `npm install mailbox` to run this demo")
	console.log(e.stack.join("\n"))
}

var destination = new mailbox.Maildir('test')

var server = smtp.createServer(function(conn) {
	conn.on('MAIL FROM', function(sender) {
		console.info("MAIL FROM " + sender.address)
		if(sender.address.match(/invalid/)) sender.valid = false
	})
	conn.on('RCPT TO', function(recipient) {
		console.info("RCPT TO " + recipient.address)
		if(recipient.address.match(/invalid/)) recipient.valid = false
	})
	var f = function(helo) {
                if(helo.name.match(/invalid/)) helo.valid = false
        }
	conn.on('HELO', f)
	conn.on('EHLO', f)
	conn.on('DATA', function(message) {
		console.log("Message incoming! From " + message.sender.address + " to " + message.recipients.map(function(e) { return e.address }).join(', '))
		destination.appendMessage(function(error, mbox) {
			if(error) {
				console.log("Message Error: " + error)
				message.emit('error', {smtpCode: "451",
smtpMessage: "Internal Error"})
				message.resume()
			} else {
				sys.pump(message, mbox, function(error) {
					mbox.end()
					if(error) {
						message.abort(error)
					} else {
						message.accept()
					}
				})
				message.on('end', function() {
					// This is ugly, but pump stops on
					// close, not end.
					message.emit('close')
				})
				message.start()
			}
		})
		message.on('data', function(data) {
			console.log('# ' + data.trimRight());
		})
		message.on('end', function() {
			console.log('!');
		})
	})
	conn.on('error', function(error) {
		console.error("Error: " + error)
	})
})

server.hostname = 'testserver'

server.listen(parseInt(process.argv[2]) || 25)
